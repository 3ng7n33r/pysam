name: Publish wheels

on:
  push:
    branches:
      - v[0-9]+.*
    tags:
      - v[0-9]+.*
  release:
    types:
      - published

jobs:
  build_wheels:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        build: ["cp36-* cp37-* cp38-* cp39-*", "cp310-* cp311-* cp312-*"]
        x64image: [manylinux_2_28]

        include:
          - os: ubuntu
            build: "cp38-manylinux_x86_64"
            x64image: manylinux2014

    steps:
      - name: Checkout pysam
        uses: actions/checkout@v4

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_SKIP: "*musllinux*"

          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_MACOS: x86_64

          CIBW_MANYLINUX_X86_64_IMAGE:  ${{ matrix.x64image }}
          CIBW_MANYLINUX_I686_IMAGE:    manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: wheelhouse/*.whl

  build_sdist:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        python-version: [3.9]

    steps:
      - name: Checkout pysam
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install prerequisite Python libraries
        run:  pip install cython pytest pytest-pep8

      - name: Install build prerequisites
        if:   runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -q --no-install-recommends --no-install-suggests libcurl4-openssl-dev

      - name: Create source distribution
        run:  python setup.py sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'release' && 'pypi' || 'testpypi' }}

    permissions:
      id-token: write

    steps:
      - name: Get artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish distribution to Test PyPI
        if: github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

      - name: Publish distribution to PyPI
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@release/v1
